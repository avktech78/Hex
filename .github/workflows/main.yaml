name: LevelDB Object Pascal

defaults:
    run:
        shell: bash


permissions:
    contents: write

on:

    push:
        branches: [ main, gus-ci-cd ]
        tags: [ "*" ]
        paths-ignore: [ "README.md", "LICENSE" ]

    pull_request:
        branches: [ main, gus-ci-cd ]

jobs:

    build:
        name: Build
        runs-on: ${{ matrix.operating-system }}

        strategy:
            fail-fast: false
            matrix:
                operating-system: [ ubuntu-20.04, ubuntu-latest, windows-latest]
                lazarus-versions: [ stable ]

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
              clean: true
              set-safe-directory: true

        - name: Install Lazarus
          uses: gcarreno/setup-lazarus@v3
          with:
              lazarus-version: ${{ matrix.lazarus-versions }}
              with-cache: false

        - name: Build Application
          run: lazbuild -B --bm=Release "source/Hex.lpi"

        - name: Upload Application
          uses: actions/upload-artifact@v4
          with:
            name: Hex-${{ matrix.operating-system }}
            path: bin/Hex*
    
    release:
        if: contains(github.ref_type, 'tag')

        name: Release Application
        runs-on: ubuntu-latest
        needs: build

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
              fetch-depth: 0
              clean: true
              set-safe-directory: true
              
        - name: Download the Release binaries
          uses: actions/download-artifact@v4

        - name: List files
          run: ls -alF
      
        - name: Create archives
          run: |
            if [ -d "Hex-ubuntu-latest" ]; then
              cd Hex-ubuntu-latest
              tar zcvf ../Hex-linux-x86_64-v${{ github.ref_name }}.tgz Hex
            fi
            if [ -d "Hex-ubuntu-20.04" ]; then
              cd Hex-ubuntu-20.04
              tar zcvf ../Hex-ubuntu-20.04-x86_64-v${{ github.ref_name }}.tgz Hex
            fi
            if [ -d "Hex-windows-latest" ]; then
              cd Hex-windows-latest
              zip ../Hex-windows-x86_64-v${{ github.ref_name }}.zip Hex.exe
            fi

        - name: Create GitHub release
          uses: softprops/action-gh-release@v1
          with:
              name: Hex ${{ github.ref_name }}
              body: Needs to be changed
              files: |
                *.tgz
                *.zip
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    